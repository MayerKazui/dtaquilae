{
  "version": 3,
  "sources": ["../../primereact/keyfilter/keyfilter.esm.js"],
  "sourcesContent": ["'use client';\r\nimport { DomHandler } from 'primereact/utils';\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n  if (len == null || len > arr.length) len = arr.length;\r\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n  return arr2;\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n  if (!o) return;\r\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\r\n  var n = Object.prototype.toString.call(o).slice(8, -1);\r\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\r\n}\r\n\r\nvar KeyFilter = {\r\n  /* eslint-disable */\r\n  DEFAULT_MASKS: {\r\n    pint: /[\\d]/,\r\n    \"int\": /[\\d\\-]/,\r\n    pnum: /[\\d\\.]/,\r\n    money: /[\\d\\.\\s,]/,\r\n    num: /[\\d\\-\\.]/,\r\n    hex: /[0-9a-f]/i,\r\n    email: /[a-z0-9_\\.\\-@]/i,\r\n    alpha: /[a-z_]/i,\r\n    alphanum: /[a-z0-9_]/i\r\n  },\r\n  /* eslint-enable */getRegex: function getRegex(keyfilter) {\r\n    return KeyFilter.DEFAULT_MASKS[keyfilter] ? KeyFilter.DEFAULT_MASKS[keyfilter] : keyfilter;\r\n  },\r\n  onBeforeInput: function onBeforeInput(e, keyfilter, validateOnly) {\r\n    // android devices must use beforeinput https://stackoverflow.com/questions/36753548/keycode-on-android-is-always-229\r\n    if (validateOnly || !DomHandler.isAndroid()) {\r\n      return;\r\n    }\r\n    this.validateKey(e, e.data, keyfilter);\r\n  },\r\n  onKeyPress: function onKeyPress(e, keyfilter, validateOnly) {\r\n    // non android devices use keydown\r\n    if (validateOnly || DomHandler.isAndroid()) {\r\n      return;\r\n    }\r\n    if (e.ctrlKey || e.altKey || e.metaKey) {\r\n      return;\r\n    }\r\n    this.validateKey(e, e.key, keyfilter);\r\n  },\r\n  onPaste: function onPaste(e, keyfilter, validateOnly) {\r\n    if (validateOnly) {\r\n      return;\r\n    }\r\n    var regex = this.getRegex(keyfilter);\r\n    var clipboard = e.clipboardData.getData('text');\r\n\r\n    // loop over each letter pasted and if any fail prevent the paste\r\n    _toConsumableArray(clipboard).forEach(function (c) {\r\n      if (!regex.test(c)) {\r\n        e.preventDefault();\r\n        return false;\r\n      }\r\n    });\r\n  },\r\n  validateKey: function validateKey(e, key, keyfilter) {\r\n    if (key === null || key === undefined) {\r\n      return;\r\n    }\r\n\r\n    // some AZERTY keys come in with 2 chars like ´ç if Dead key is pressed first\r\n    var isPrintableKey = key.length <= 2;\r\n    if (!isPrintableKey) {\r\n      return;\r\n    }\r\n    var regex = this.getRegex(keyfilter);\r\n    if (!regex.test(key)) {\r\n      e.preventDefault();\r\n    }\r\n  },\r\n  validate: function validate(e, keyfilter) {\r\n    var value = e.target.value;\r\n    var validatePattern = true;\r\n    var regex = this.getRegex(keyfilter);\r\n    if (value && !regex.test(value)) {\r\n      validatePattern = false;\r\n    }\r\n    return validatePattern;\r\n  }\r\n};\r\n\r\nexport { KeyFilter };\r\n"],
  "mappings": "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",
  "names": []
}
